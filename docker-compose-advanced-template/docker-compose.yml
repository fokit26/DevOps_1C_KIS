services:
  backend:
    build: backend
    environment:
      - DB_HOST=db
    depends_on:
      db:
        condition: service_healthy
      db_init:
        condition: service_completed_successfully
  db:
    image: postgres:16.8-alpine3.20
    env_file:
      - db/.db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 2s
      retries: 5
  db_init:
    build: backend
    depends_on:
      db:
        condition: service_healthy
    command: python3 init_db.py
    environment:
      - DB_HOST=db
    env_file:
      - db/.db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
  frontend:
    image: nginx:alpine
    ports:
      - "8189:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/styles.css:/usr/share/nginx/html/static/styles.css
    depends_on:
      - backend
    command: [sh, -c, "nginx -g 'daemon off;'"]
volumes:
  postgres_data: